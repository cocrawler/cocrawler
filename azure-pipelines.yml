trigger:
- main

jobs:
  - job: linux
    timeoutInMinutes: 10  # does not cause a failure, unfortunately
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      matrix:
        # geoip2 is >= 3.6
        Python36:
          python.version: '3.6'
        Python36loglevel:
          python.version: '3.6'
          myenv: COCRAWLER_LOGLEVEL=DEBUG
        Python36asyncdebug:
          python.version: '3.6'
          myenv: PYTHONASYNCIODEBUG=1
        Python37:
          python.version: '3.7'
        Python38:
          python.version: '3.8'
        # 3.9 is a reppy build fail

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'

    - script: |
        python -m pip install --upgrade pip
        pip install . .[test]
      displayName: 'Install dependencies'

    - script: |
        set -e
        if [ ! -z "$(myenv)" ]; then
          export $(myenv)
        fi
        make test_coverage
      displayName: 'pytest'

    - script: |
        pip install coveralls
        coveralls
      displayName: 'coveralls'
      env:
        CI_NAME: Azure Pipelines
        CI_BRANCH: $(Build.SourceBranch)
        CI_BUILD_NUMBER: $(Build.BuildNumber)
        CI_BUILD_URL: $(Build.BuildUri)
        COVERALLS_REPO_TOKEN: $(COVERALLS_REPO_TOKEN)

  - job: macos
    timeoutInMinutes: 10  # does not cause a failure, unfortunately
    pool:
      vmImage: 'macOS-latest'
    strategy:
      matrix:
        Python38:
          python.version: '3.8'

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'

    - script: |
        python -m pip install --upgrade pip
        pip install . .[test]
      displayName: 'Install dependencies'

    - script: |
        set -e
        if [ ! -z "$(myenv)" ]; then
          export $(myenv)
        fi
        make test_coverage
        coverage report
      displayName: 'pytest'

    - script: |
        pip install coveralls
        coveralls
      displayName: 'coveralls'
      env:
        COVERALLS_SERVICE_NAME: Azure Pipelines
        COVERALLS_SERVICE_JOB_NUMBER: $(Build.BuildNumber)
        COVERALLS_REPO_TOKEN: $(COVERALLS_REPO_TOKEN)
